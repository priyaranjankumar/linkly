services:
  frontend:
    # ... (frontend config remains the same) ...
    build:
      context: ./frontend
      args:
        VITE_API_BASE_URL: /api
    container_name: linkly_frontend
    ports:
      - "3000:8080"
    depends_on:
      - backend
    networks:
      - linkly_net
    restart: unless-stopped

  backend:
    build: ./backend
    container_name: linkly_backend
    env_file:
      - .env
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      REDIS_HOST: cache
      REDIS_PORT: ${REDIS_PORT:-6379}
      DEFAULT_CACHE_TTL_SECONDS: 3600
      # Base URL for generating short clickable links (used by backend AND frontend redirects)
      DEV_PUBLIC_URL: http://localhost:3000
      # --- ADD THIS ---
      # Base URL of the frontend app itself (for redirecting inactive links)
      FRONTEND_BASE_URL: ${DEV_PUBLIC_URL:-http://localhost:3000}
      # ----------------
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      cache:
        condition: service_started
    networks:
      - linkly_net
    restart: unless-stopped

  db:
    # ... (db config remains the same) ...
    image: postgres:15-alpine
    container_name: linkly_db
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - linkly_net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  cache:
    # ... (cache config remains the same) ...
    image: redis:7-alpine
    container_name: linkly_cache
    volumes:
      - redis_data:/data
    networks:
      - linkly_net
    ports:
      - "6379:6379"
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  linkly_net:
    driver: bridge
