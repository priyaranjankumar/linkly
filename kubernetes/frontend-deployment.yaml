apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend-deployment
spec:
  replicas: 1 # Start with 1 replica
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
    spec:
      containers:
      - name: frontend
        image: <ACR_LOGIN_SERVER>/frontend:latest # Placeholder - CI/CD replaces this
        ports:
        - containerPort: 80
        env: 
        - name: REACT_APP_API_URL # Backend service URL for frontend
          value: "http://backend-service"
        - name: VITE_API_BASE_URL
          value: "/api"  # This assumes your nginx config is set up to proxy /api to the backend
        resources: # Request minimal resources
          requests:
            cpu: "50m"
            memory: "128Mi"
          limits:
            cpu: "200m"
            memory: "256Mi"
        readinessProbe:
          httpGet:
            path: / # Check the root path instead of health.html which may not exist
            port: 80
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 3
        livenessProbe:
          httpGet:
            path: / # Check the root path
            port: 80
          initialDelaySeconds: 30
          periodSeconds: 20
          timeoutSeconds: 3

---
apiVersion: v1
kind: Service
metadata:
  name: frontend-service
spec:
  selector:
    app: frontend
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
  type: LoadBalancer # Expose frontend externally with an Azure Load Balancer
                     # This will provision a Public IP address (costs money)